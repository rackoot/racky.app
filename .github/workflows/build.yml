on:
  push:
    tags:
    - '**'

permissions: read-all

name: "Build"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_533267199925 }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_533267199925 }}
  GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
  DEPLOYMENT: ${{ vars.DEPLOYMENT }}
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

jobs:
  set-release-revision:
    runs-on: ubuntu-latest
    outputs: 
      RELEASE_REVISION: ${{ steps.set-release-revision.outputs.RELEASE_REVISION }}
    steps:
    - name: Set env
      id: set-release-revision
      run: | 
        echo "RELEASE_REVISION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

  slack-start:
    needs: set-release-revision
    uses: rackoot/common-workflows/.github/workflows/slackStartNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit


  build-docker-images:
    needs: [set-release-revision]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_533267199925 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_533267199925 }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Build & Push Backend Image
        run: |
          docker buildx build \
            --push \
            -t 533267199925.dkr.ecr.us-east-1.amazonaws.com/rackoot/racky.app.backend:${{ needs.set-release-revision.outputs.RELEASE_REVISION }} \
            -f server/Dockerfile ./server

      - name: Build & Push Frontend Image
        run: |
          docker buildx build \
            --push \
            -t 533267199925.dkr.ecr.us-east-1.amazonaws.com/rackoot/racky.app.frontend:${{ needs.set-release-revision.outputs.RELEASE_REVISION }} \
            -f client/Dockerfile ./client

  scan-image:
    needs: [set-release-revision, build-docker-images]
    uses: rackoot/common-workflows/.github/workflows/trivyScanner.yml@main
    with:
      ECR_REPOSITORY: "rackoot/racky.app.backend"
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      DEPLOYMENT: ${{ vars.DEPLOYMENT }}
    secrets: inherit
    
  scan-image-backend:
    needs: [set-release-revision, build-docker-images]
    uses: rackoot/common-workflows/.github/workflows/trivyScanner.yml@main
    with:
      ECR_REPOSITORY: "rackoot/racky.app.frontend"
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      DEPLOYMENT: ${{ vars.DEPLOYMENT }}
    secrets: inherit
    
  build-helm-package:
    needs: [set-release-revision, build-docker-images]
    uses: rackoot/common-workflows/.github/workflows/buildHelmPackage.yml@main
    with:
      LOCAL_PATH: ./helm/chart
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      HELM_CHART_REPO: s3://racky-helm-charts
      DEPLOYMENT: ${{ vars.DEPLOYMENT }}
    secrets: inherit

  slack-failed:
    if: ${{ failure() }}
    needs: [set-release-revision, build-helm-package]
    uses: rackoot/common-workflows/.github/workflows/slackFailNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit

  slack-success:
    if: ${{ success() }}
    needs: [set-release-revision, build-helm-package]
    uses: rackoot/common-workflows/.github/workflows/slackSuccessNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit

  slack-deploy-start:
    needs: [set-release-revision, build-helm-package]
    name: Slack start message
    uses: rackoot/common-workflows/.github/workflows/slackStartDeployNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      ENVIRONMENT: dev
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit

  deploy:
    needs: [set-release-revision, slack-deploy-start]
    name: Deploy Chart
    uses: rackoot/common-workflows/.github/workflows/deployHelmChart-V2.yml@main
    with:
      AWS_ACCOUNT: 533267199925
      DEPLOYMENT: ${{ vars.DEPLOYMENT }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      HELM_CHART_REPO: s3://racky-helm-charts
      ENVIRONMENT: dev
    secrets: inherit

  slack-deploy-failed:
    name: Slack result message
    if: ${{ failure() }}
    needs: [set-release-revision, deploy]
    uses: rackoot/common-workflows/.github/workflows/slackFailDeployNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      ENVIRONMENT: dev
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit  

  slack-deploy-success:
    name: Slack result message
    if: ${{ success() }}
    needs: [set-release-revision, deploy]
    uses: rackoot/common-workflows/.github/workflows/slackSuccessDeployNotif.yml@main
    with:
      SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
      RELEASE_REVISION: ${{ needs.set-release-revision.outputs.RELEASE_REVISION }}
      ENVIRONMENT: dev
      GITHUB_ACTOR: ${{ github.actor }}
    secrets: inherit 