
services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: racky-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    networks:
      - racky-network

  # RabbitMQ Message Broker (Replaces Redis for queues)
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: racky-rabbitmq
    restart: unless-stopped
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"      # AMQP port
      - "${RABBITMQ_MGMT_PORT:-15672}:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/init:/docker-entrypoint-initdb.d
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-racky}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-racky123}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-racky}
    networks:
      - racky-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      timeout: 5s
      interval: 10s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: racky-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:5000"
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - .env.docker
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/racky
      - PORT=5000
      - RABBITMQ_URL=amqp://racky:racky123@rabbitmq:5672/racky
      - USE_RABBITMQ=true
      - STRIPE_SKIP_WEBHOOK_VERIFICATION=true
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - racky-network
    command: npm run dev

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: racky-frontend
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - backend
    env_file:
      - .env.docker
    environment:
      - VITE_BACKEND_URL=http://backend:5000
      - DOCKER_ENV=true
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - racky-network
    command: npm run dev -- --host 0.0.0.0

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  racky-network:
    driver: bridge